// tslint:disable
/**
 * Skadi Documention Generator
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { AnyType } from './any-type';
import { Model154945940 } from './model154945940';
import { Model154945960 } from './model154945960';
import { Parameter } from './parameter';
import { ReferenceOrForExampleAnyOf } from './reference-or-for-example-any-of';

/**
 * 
 * @export
 * @interface ReferenceOrForParameter
 */
export interface ReferenceOrForParameter {
    /**
     * REQUIRED. The reference identifier. This MUST be in the form of a URI.
     * @type {string}
     * @memberof ReferenceOrForParameter
     */
    $ref: string;
    /**
     * A brief description of the parameter. This could contain examples of use. CommonMark syntax MAY be used for rich text representation.
     * @type {AnyType}
     * @memberof ReferenceOrForParameter
     */
    description?: AnyType;
    /**
     * A short summary which by default SHOULD override that of the referenced component. If the referenced object-type does not allow a `summary` field, then this field has no effect.
     * @type {string}
     * @memberof ReferenceOrForParameter
     */
    summary?: string | null;
    /**
     * Sets the ability to pass empty-valued parameters. This is valid only for query parameters and allows sending a parameter with an empty value. Default value is false. If style is used, and if behavior is n/a (cannot be serialized), the value of allowEmptyValue SHALL be ignored.
     * @type {AnyType}
     * @memberof ReferenceOrForParameter
     */
    allow_empty_value?: AnyType;
    /**
     * Determines whether the parameter value SHOULD allow reserved characters, as defined by RFC3986 :/?#[]@!$&\'()*+,;= to be included without percent-encoding. This property only applies to parameters with an in value of query. The default value is false.
     * @type {boolean}
     * @memberof ReferenceOrForParameter
     */
    allow_reserved?: boolean;
    /**
     * Specifies that a parameter is deprecated and SHOULD be transitioned out of usage.
     * @type {AnyType}
     * @memberof ReferenceOrForParameter
     */
    deprecated?: AnyType;
    /**
     * 
     * @type {{ [key: string]: Model154945960; }}
     * @memberof ReferenceOrForParameter
     */
    examples?: { [key: string]: Model154945960; };
    /**
     * 
     * @type {AnyType}
     * @memberof ReferenceOrForParameter
     */
    explode?: AnyType;
    /**
     * 
     * @type {string}
     * @memberof ReferenceOrForParameter
     */
    _in: ReferenceOrForParameterInEnum;
    /**
     * REQUIRED. The name of the parameter. Parameter names are case sensitive. If in is \"path\", the name field MUST correspond to the associated path segment from the path field in the Paths Object. See Path Templating for further information.  If in is \"header\" and the name field is \"Accept\", \"Content-Type\" or \"Authorization\", the parameter definition SHALL be ignored.  For all other cases, the name corresponds to the parameter name used by the in property.
     * @type {string}
     * @memberof ReferenceOrForParameter
     */
    name: string;
    /**
     * Determines whether this parameter is mandatory. If the parameter location is \"path\", this property is REQUIRED and its value MUST be true. Otherwise, the property MAY be included and its default value is false.
     * @type {boolean}
     * @memberof ReferenceOrForParameter
     */
    required?: boolean;
    /**
     * 
     * @type {Model154945940}
     * @memberof ReferenceOrForParameter
     */
    style?: Model154945940;
}

/**
    * @export
    * @enum {string}
    */
export enum ReferenceOrForParameterInEnum {
    Cookie = 'cookie'
}



